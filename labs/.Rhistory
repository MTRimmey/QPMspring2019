## Layout (Four windows):
# Editor: Top left window. This is where you type R code to solve the exercises in this course.
# Console: Bottom left window. The output of your code is displayed.
# Workspace: Top right window. You can see a history of your commands and see all active objects.
# Top bottom window. You can see plots, list of packages, additional information, and so on.
# Show some of the graphics that R can produce
demo("graphics")
# (PC users:) "control + enter"
# (Mac users:) "command + return"
# You can also simply copy and paste the line of code.
# You can also use "Run" button to execute a single line of code and "Source" button to execute all the codes.
print("Hello world")
## 1.3: R as a calculator
# Basic arithmetic
# addition
2 + 3
# multiplication
2*3
# division
5/3
# subtraction
4 - 5
# exponents
3^3
install.packages("foreign")
library(haven)
dataset <- read_stata(NULL)
View(dataset)
setwd("-/Documents/GitHub/labs")
## 1.2: Importing data
# go to: https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/ARKOTI
# download PESenergy.csv
energyData <- read.csv("PESenergy.csv")
setwd("-/Documents/GitHub/labs")
setwd("-/Documents/GitHub/QPMspring2019/labs")
setwd("-/Documents/GitHub/QPMspring2019/labs")
setwd("~/Documents/GitHub/QPMspring2019/labs")
getwd()
setwd("~/GitHub/QPMspring2019/labs")
## 1.2: Importing data
# go to: https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/ARKOTI
# download PESenergy.csv
energyData <- read.csv("lab2/PESenergy.csv")
## 2.1: Exploring data
dim(energyData)   # dimension
nrow(energyData)  # number of rows (observations)
tail(energyData)   # last five rows
energyData$Energy     # access variables
energyData["Energy"]
energy.coverage <- energyData$Energy  # you can create a new object (vector)
energy.coverage*100
summary(energyData$Energy)
summary(energyData$Energy)
x[3]
quantile(energyData$Energy, 0.25)
quantile(energyData$Energy, 0.5)
table(energyData$Energy)
## 2.2: subsetting data
subset1 <- energyData[1:20,]                               # by row
## 2.2: subsetting data
subset1 <- energyData[1:20,]                               # by row
## 2.2: subsetting data
subset1 <- energyData[20:60,]                               # by row
subset2 <- energyData[,5:7]                                # by column
subset3 <- energyData[,c("Date", "Energy", "Approval")]    # by column name
energyData$New <- NA  # assign NA (=missing)
colnames(energyData)
# calculation based on two variables (columns)
energyData$New2 <- energyData$Energy/energyData$Unemploy
## 3.1: Plotting data
hist(energyData$Energy, xlab="Television Stories", main="")  # histogram
energyData$New2 <- energyData$Energy/energyData$Unemploy
# calculation based on two variables (columns)
energyData$New2 = energyData$Energy/energyData$Unemploy
table(energy)
table(energyData$energy)
?hist
boxplot(energyData$Energy, ylab="Television Stories", main="")  # boxplot
rug(energyData$Energy)
plot(density(energyData$Energy))  # density plot
# some scatterplots
plot(energyData$Approval, energyData$Energy,
ylab="Television Stories", xlab="Presidential Approval")
## 3.2: Saving plots
pdf("~/Documents/GitHub/QPMspring2019/problemSets/stories.pdf", width=7, height=7)
## 3.2: Saving plots
pdf("~/Documents/GitHub/QPMspring2019/problemSets/stories.pdf", width=7, height=7)
dev.off()
getwd()
# 2. Open movies.csv provided by Prof. Cetinkaya-Rundel at Duke.
#    It is a dataset on randomly sampled movies released between 1972 to 2014 in
#    the Unites States. The description of the variables is available on her webpage
#    (http://www2.stat.duke.edu/~mc301/data/movies.html).
Movies <- read.csv("lab2/movies.csv")
# 2. Open movies.csv provided by Prof. Cetinkaya-Rundel at Duke.
#    It is a dataset on randomly sampled movies released between 1972 to 2014 in
#    the Unites States. The description of the variables is available on her webpage
#    (http://www2.stat.duke.edu/~mc301/data/movies.html).
Movies <- read.csv("lab2/movies.csv")
colnames(energyData)
colnames(energyData)[5]
?mean
# 3. How many rows and columns are there?
head
# 3. How many rows and columns are there?
head <- read.csv(lab2/movies.csv)
# 3. How many rows and columns are there?
head <- head(lab2/movies.csv)
# 3. How many rows and columns are there?
head <- head("lab2/movies.csv")
# 4. What is the name of the fifth column? Store it as a new object and find how many
#    of them are PG-13.
setwd("~/lab2movies.csv")
# 5. Subset the data based on the following four columns:
#      (1) runtime
#      (2) imdb_rating
#      (3) imdb_num_votes
#      (4) audience_score
plot(energyData$runtime, energyData$imdb_rating,
ylab = "runtime")
# 5. Subset the data based on the following four columns:
#      (1) runtime
#      (2) imdb_rating
#      (3) imdb_num_votes
#      (4) audience_score
plot(energyData$runtime, energyData$imdb_rating,
ylab= "runtime", xlab= "imdb_rating")
# 5. Subset the data based on the following four columns:
#      (1) runtime
#      (2) imdb_rating
#      (3) imdb_num_votes
#      (4) audience_score
plot(energyData$runtime, energyData$imdb_rating,
ylab= "runtime", xlab= "imdb_rating")
?plot
# 5. Subset the data based on the following four columns:
#      (1) runtime
#      (2) imdb_rating
#      (3) imdb_num_votes
#      (4) audience_score
plot(energyData$runtime, energyData$energy,
ylab= "runtime", xlab= "imdb_rating")
plot(energyData$Date, energyData$Approval,
ylab="Presidential Approval", xlab="Date")
## 3.1: Plotting data
hist(energyData$Energy, xlab="Television Stories", main="")  # histogram
# 7. Create a plot that nicely summarizes the distribution of the IMDB rating
#    for all the movies (using imdb_rating).
hist(energyData$Energy, xlab="imdb_rating", main="")  # histogram
# 7. Create a plot that nicely summarizes the distribution of the IMDB rating
#    for all the movies (using imdb_rating).
hist(energyData$Energy, xlab="IMDb rating", main="")  # histogram
# 5. Subset the data based on the following four columns:
#      (1) runtime
#      (2) imdb_rating
#      (3) imdb_num_votes
#      (4) audience_score
plot(Movies$runtime, Movies$energy,
ylab= "runtime", xlab= "imdb_rating")
colnames(Movies)[5]
# 6. What are the means of runtime and imdb_rating?
#    What are the medians of imdb_num_votes and audience_score?
mean(Movies$runtime)
mean(Movies$imdb_rating)
# 8. Pick two numeric variables and plot them against each other. Explain what you find.
#    Be creative and try many plot options (pch, cex, col, etc.).
pch(Movies$runtime)
# 7. Create a plot that nicely summarizes the distribution of the IMDB rating
#    for all the movies (using imdb_rating).
hist(Movies$imdb_rating, xlab="IMDb rating", main="")  # histogram
# 5. Subset the data based on the following four columns:
#      (1) runtime
#      (2) imdb_rating
#      (3) imdb_num_votes
#      (4) audience_score
plot(Movies$runtime, Movies$imdb_rating,
ylab= "runtime", xlab= "imdb_rating")
plot(Movies$imdb_num_votes, Movies$audience_score,
ylab= "imdb_num_votes", xlab="audience_score")
plot(Movies$imdb_num_votes, Movies$audience_score,
ylab= "imdb votes", xlab="Audience Score")
# 3. How many rows and columns are there?
head <- head("lab2/movies.csv")
# 3. How many rows and columns are there?
Movies <- head("lab2/movies.csv")
rm(ls=())
